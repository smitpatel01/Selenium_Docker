name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Replace with the branch you want to trigger the workflow on
  workflow_dispatch: # Enable manual triggering of the workflow
  repository_dispatch:  # Enable triggering of the workflow from repo1

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build Jar
        run: mvn clean package -DskipTests
        # Make sure to adjust this step according to your Maven project structure

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t smitpatel0109/selenium-docker .
        # Make sure to adjust this step according to your Docker build context and Dockerfile path

      - name: Log in to Docker Hub and Push Image
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push smitpatel0109/selenium-docker:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          # Make sure to create a secret named DOCKERHUB_USERNAME in your repository settings, containing your Docker Hub username
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          # Make sure to create a secret named DOCKERHUB_TOKEN in your repository settings, containing your Docker Hub password/token

      # Additional steps from the provided Jenkinsfile
      - name: Pull Latest Image
        run: docker pull smitpatel0109/selenium-docker

      - name: Start Grid
        run: docker-compose up -d hub chrome firefox
        # Make sure to adjust this step according to your Docker Compose setup

      - name: Run Test
        run: docker-compose up Search-module BookFlight-module
        # Make sure to adjust this step according to your Docker Compose setup

      - name: Archive Artifacts and Clean Up
        run: |
          mkdir -p output
          docker cp $(docker-compose ps -q Search-module):/usr/share/smit/test-output output/
          docker-compose down
        # Make sure to adjust the paths and container names based on your Docker Compose setup
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-results  # Replace with a meaningful name for your artifacts
          path: output
